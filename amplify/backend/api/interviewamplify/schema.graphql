
type Interview 
  @aws_cognito_user_pools
  @model
  @auth(rules: [{ allow: owner, operations: [create, delete, update, read] }]) {
	id: ID!
	title: String!
	profileInterviewsId: ID!
	type: String! @index(name: "interviewsByDate", queryField: "interviewsByDate", sortKeyFields: ["createdAt"])
	createdAt: AWSDateTime!
	updatedAt: AWSDateTime!
	owner: String
}

type Message 
  @aws_cognito_user_pools
  @model (subscriptions: { level: public })
  @auth(rules: [{ allow: owner, operations: [create, delete, update, read] }]) {
	id: ID!
	sender: String!
	messageInterviewId: ID!
	message: String!
	direction: String
	type: String @index(name: "messagesByDate", queryField: "messagesByDate", sortKeyFields: ["createdAt"])
	createdAt: AWSDateTime!
	updatedAt: AWSDateTime!
	owner: String
}

type Profile
  @aws_cognito_user_pools
  @model
  @auth(rules: [{ allow: owner, operations: [create, delete, update, read] }]) {
	id: ID!
	name: String!
	createdAt: AWSDateTime!
	updatedAt: AWSDateTime!
	owner: String
}
